#include <dt-bindings/zmk/mouse.h>
#include <input/processors.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

/*

   &mmv_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

   &msc_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

 */

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10

&sl {
    release-after-ms = <2000>;
    ignore-modifiers;
};

&sk {
    release-after-ms = <2000>;
    quick-release;
    ignore-modifiers;
};

/ {
    behaviors {
        oslr: behavior_mo_tog {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
            bindings = <&mo>, <&sl>;
        };

        hold_kp_tap_tog: behavior_mo_tog {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_KP_TAP_TOG";
            bindings = <&kp>, <&tog>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    macros {
        super_alttab: super_alttab {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp TAB>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&kp LALT>;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <30>;
    };

    combos {
        compatible = "zmk,combos";

        unlock_combo {
            bindings = <&to 0>;
            key-positions = <1 5>;
            layers = <7>;
        };

        lock_combo {
            bindings = <&to 7>;
            key-positions = <1 5>;
            layers = <0>;
        };

        numpad_osl_activator {
            bindings = <&sl 5>;
            key-positions = <38 39>;
            layers = <3 1>;
        };

        func_osl_activator {
            bindings = <&sl 4>;
            key-positions = <30 31>;
            layers = <3 1>;
        };

        boot_left {
            bindings = <&bootloader>;
            key-positions = <2 4>;
            layers = <4>;
        };

        boot_right {
            bindings = <&bootloader>;
            key-positions = <8 10>;
            layers = <5>;
        };

        reset_left {
            bindings = <&sys_reset>;
            key-positions = <30 32>;
            layers = <4>;
        };

        reset_right {
            bindings = <&sys_reset>;
            key-positions = <39 37>;
            layers = <5>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            display-name = "QWERTY";
            bindings = <
&kp TAB         &kp Q  &kp W  &kp E     &kp R      &kp T                                 &mmv MOVE_UP                     &kp Y       &kp U      &kp I                    &kp O    &kp P     &kp GRAVE
&kp LEFT_SHIFT  &kp A  &kp S  &kp D     &kp F      &kp G                 &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp H       &kp J      &kp K                    &kp L    &kp SEMI  &kp SQT
&kp LCTRL       &kp Z  &kp X  &kp C     &kp V      &kp B        &none                    &mmv MOVE_DOWN                   &kp N       &kp M      &kp COMMA                &kp DOT  &kp FSLH  &mkp LCLK
                              &kp LGUI  &oslr 1 4  &lt 3 SPACE                                                            &sk RSHIFT  &oslr 2 5  &hold_kp_tap_tog RALT 6
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        sym_layer {
            display-name = "SYMBOL";
            bindings = <
&super_alttab  &kp N1         &kp N2            &kp N3             &kp N4    &kp N5                               &mmv MOVE_UP                     &kp N6     &kp N7            &kp N8     &kp N9          &kp N0           &trans
&kp ESC        &kp EXCL       &kp AT            &kp HASH           &kp DLLR  &kp PRCNT            &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp CARET  &kp AMPS          &kp ASTRK  &kp LPAR        &kp RPAR         &kp TILDE
&trans         &kp BACKSLASH  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp PIPE  &trans     &trans                    &mmv MOVE_DOWN                   &kp PLUS   &kp MINUS         &kp EQUAL  &kp LEFT_BRACE  &kp RIGHT_BRACE  &trans
                                                &trans             &trans    &kp SPACE                                                             &trans     &lt 2 UNDERSCORE  &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        nav_layer {
            display-name = "NAV";
            bindings = <
&trans   &trans     &trans     &trans      &trans     &trans                                &mmv MOVE_UP                     &trans            &kp HOME   &kp UP     &kp END    &kp DELETE  &trans
&kp ESC  &none      &kp LALT   &kp RSHIFT  &kp LCTRL  &trans                &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp TAB           &kp LEFT   &kp DOWN   &kp RIGHT  &kp BSPC    &msc SCRL_UP
&trans   &kp LC(Z)  &kp LC(X)  &kp LC(C)   &kp LC(V)  &trans  &kp C_MUTE                    &mmv MOVE_DOWN                   &trans            &kp PG_UP  &kp PG_DN  &kp RET    &trans      &msc SCRL_DOWN
                               &trans      &trans     &trans                                                                 &lt 1 UNDERSCORE  &trans     &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        fn_num_layer {
            display-name = "Fn-Num";
            bindings = <
&trans            &kp F3  &kp F4        &kp F5         &kp F6      &kp F7                            &mmv MOVE_UP                     &kp KP_MULTIPLY  &kp KP_N7  &kp KP_N8   &kp KP_N9  &kp KP_MINUS   &kp KP_NUMLOCK
&kp LEFT_SHIFT    &kp F2  &kp F10       &kp F11        &kp F12     &kp F8            &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp F9           &kp KP_N4  &kp KP_N5   &kp KP_N6  &kp BSPC       &kp KP_CLEAR
&kp LEFT_CONTROL  &kp F1  &kp LA(LEFT)  &kp LA(RIGHT)  &kp LA(F5)  &kp F9  &trans                    &mmv MOVE_DOWN                   &kp KP_PLUS      &kp KP_N1  &kp KP_N2   &kp KP_N3  &kp KP_DIVIDE  &kp SCROLLLOCK
                                        &trans         &trans      &trans                                                             &kp KP_EQUAL     &kp N0     &kp KP_DOT
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        osl_layer {
            display-name = "OSL L";
            bindings = <
&trans         &trans        &trans    &kp PRINTSCREEN  &trans     &kp INSERT                                 &mmv MOVE_UP                     &trans  &studio_unlock  &trans  &trans  &trans  &trans
&trans         &kp LC(HOME)  &sk RALT  &sk RSHIFT       &sk RCTRL  &trans                     &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &trans  &trans          &trans  &trans  &trans  &trans
&kp RC(RSHFT)  &kp LC(END)   &trans    &kp CAPS         &trans     &kp PAUSE_BREAK  &trans                    &mmv MOVE_DOWN                   &trans  &trans          &trans  &trans  &trans  &trans
                                       &trans           &trans     &trans                                                                      &trans  &trans          &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        ols_r_layer {
            display-name = "OSL R";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                            &mmv MOVE_UP                     &trans  &trans    &trans      &trans     &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans            &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &trans  &sk RALT  &sk RSHIFT  &sk RCTRL  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans                    &mmv MOVE_DOWN                   &trans  &trans    &trans      &trans     &trans  &trans
                        &trans  &trans  &trans                                                             &trans  &trans    &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        mouse_layer {
            display-name = "Mouse";
            bindings = <
&trans  &trans  &trans     &trans     &trans     &trans                            &mmv MOVE_UP                     &trans     &trans          &mmv MOVE_UP    &trans           &trans  &trans
&trans  &trans  &mkp RCLK  &mkp MCLK  &mkp LCLK  &trans            &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &trans     &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &trans  &trans
&trans  &trans  &trans     &trans     &trans     &trans  &trans                    &mmv MOVE_DOWN                   &trans     &mkp RCLK       &trans          &trans           &trans  &trans
                           &trans     &trans     &trans                                                             &mkp MCLK  &mkp LCLK       &to 0
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        locked_layer {
            bindings = <
&none  &none  &none  &none  &none  &none                  &none         &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none           &none  &none  &none  &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none  &none           &none         &none  &none  &none  &none  &none  &none
                     &none  &none  &none                                &none  &none  &none
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        mouselayer {
            if-layers = <2 1>;
            then-layer = <6>;
        };
    };
};
